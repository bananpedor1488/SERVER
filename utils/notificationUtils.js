// –°–∏—Å—Ç–µ–º–∞ email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è SocialSpace
console.log('üîî Loading notificationUtils.js...');

const nodemailer = require('nodemailer');

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
const createTransporter = () => {
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASSWORD) {
    console.error('‚ùå Email configuration missing');
    throw new Error('Email configuration is missing');
  }

  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASSWORD
    }
  });
};

// –ë–∞–∑–æ–≤—ã–π HTML —à–∞–±–ª–æ–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const createEmailTemplate = (title, content, actionText = null, actionUrl = null) => {
  return `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
      <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center; color: white;">
        <h1 style="margin: 0;">SocialSpace</h1>
        <p style="margin: 10px 0 0 0;">${title}</p>
      </div>
      
      <div style="padding: 30px; background: #f9f9f9;">
        ${content}
        
        ${actionText && actionUrl ? `
          <div style="text-align: center; margin-top: 30px;">
            <a href="${actionUrl}" style="background: #667eea; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
              ${actionText}
            </a>
          </div>
        ` : ''}
      </div>
      
      <div style="background: #333; color: white; padding: 15px; text-align: center; font-size: 12px;">
        <p style="margin: 0;">¬© 2025 SocialSpace. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        <p style="margin: 5px 0 0 0;">
          <a href="#" style="color: #667eea; text-decoration: none;">–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</a>
        </p>
      </div>
    </div>
  `;
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–µ
const sendFollowNotification = async (follower, followedUser) => {
  try {
    const transporter = createTransporter();
    
    const avatarUrl = follower.avatar || 'https://via.placeholder.com/60x60/667eea/ffffff?text=' + follower.username.charAt(0).toUpperCase();
    
    const content = `
      <h2 style="color: #333; margin-bottom: 20px;">–ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞!</h2>
      <div style="display: flex; align-items: center; margin-bottom: 20px;">
        <img src="${avatarUrl}" alt="${follower.username}" style="width: 60px; height: 60px; border-radius: 50%; margin-right: 15px; border: 3px solid #667eea;">
        <div>
          <p style="color: #666; line-height: 1.6; margin: 0;">
            <strong style="color: #333;">${follower.username}</strong> –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.
          </p>
        </div>
      </div>
      <div style="background: white; border-radius: 8px; padding: 15px; margin: 20px 0;">
        <p style="margin: 0; color: #333;">
          <strong>–ü–æ–¥–ø–∏—Å—á–∏–∫:</strong> ${follower.username}<br>
          <strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}
        </p>
      </div>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: followedUser.email,
      subject: `–ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –æ—Ç ${follower.username} - SocialSpace`,
      text: `${follower.username} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ SocialSpace`,
      html: createEmailTemplate('–ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞', content, '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', '#')
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Follow notification sent:', result.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending follow notification:', error.message);
    return false;
  }
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ª–∞–π–∫–µ
const sendLikeNotification = async (liker, postAuthor, post) => {
  try {
    const transporter = createTransporter();
    
    const avatarUrl = liker.avatar || 'https://via.placeholder.com/60x60/667eea/ffffff?text=' + liker.username.charAt(0).toUpperCase();
    
    const content = `
      <h2 style="color: #333; margin-bottom: 20px;">–ù–æ–≤—ã–π –ª–∞–π–∫!</h2>
      <div style="display: flex; align-items: center; margin-bottom: 20px;">
        <img src="${avatarUrl}" alt="${liker.username}" style="width: 60px; height: 60px; border-radius: 50%; margin-right: 15px; border: 3px solid #667eea;">
        <div>
          <p style="color: #666; line-height: 1.6; margin: 0;">
            <strong style="color: #333;">${liker.username}</strong> –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫ –≤–∞—à–µ–º—É –ø–æ—Å—Ç—É.
          </p>
        </div>
      </div>
      <div style="background: white; border-radius: 8px; padding: 15px; margin: 20px 0;">
        <p style="margin: 0; color: #333;">
          <strong>–ü–æ—Å—Ç:</strong> ${post.content.substring(0, 100)}${post.content.length > 100 ? '...' : ''}<br>
          <strong>–õ–∞–π–∫–Ω—É–ª:</strong> ${liker.username}<br>
          <strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}
        </p>
      </div>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: postAuthor.email,
      subject: `–ù–æ–≤—ã–π –ª–∞–π–∫ –æ—Ç ${liker.username} - SocialSpace`,
      text: `${liker.username} –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫ –≤–∞—à–µ–º—É –ø–æ—Å—Ç—É`,
      html: createEmailTemplate('–ù–æ–≤—ã–π –ª–∞–π–∫', content, '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç', '#')
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Like notification sent:', result.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending like notification:', error.message);
    return false;
  }
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
const sendCommentNotification = async (commenter, postAuthor, post, comment) => {
  try {
    const transporter = createTransporter();
    
    const avatarUrl = commenter.avatar || 'https://via.placeholder.com/60x60/667eea/ffffff?text=' + commenter.username.charAt(0).toUpperCase();
    
    const content = `
      <h2 style="color: #333; margin-bottom: 20px;">–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!</h2>
      <div style="display: flex; align-items: center; margin-bottom: 20px;">
        <img src="${avatarUrl}" alt="${commenter.username}" style="width: 60px; height: 60px; border-radius: 50%; margin-right: 15px; border: 3px solid #667eea;">
        <div>
          <p style="color: #666; line-height: 1.6; margin: 0;">
            <strong style="color: #333;">${commenter.username}</strong> –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª –≤–∞—à –ø–æ—Å—Ç.
          </p>
        </div>
      </div>
      <div style="background: white; border-radius: 8px; padding: 15px; margin: 20px 0;">
        <p style="margin: 0; color: #333;">
          <strong>–ü–æ—Å—Ç:</strong> ${post.content.substring(0, 100)}${post.content.length > 100 ? '...' : ''}<br>
          <strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> ${comment.content}<br>
          <strong>–ê–≤—Ç–æ—Ä:</strong> ${commenter.username}<br>
          <strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}
        </p>
      </div>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: postAuthor.email,
      subject: `–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç ${commenter.username} - SocialSpace`,
      text: `${commenter.username} –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª –≤–∞—à –ø–æ—Å—Ç`,
      html: createEmailTemplate('–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', content, '–û—Ç–≤–µ—Ç–∏—Ç—å', '#')
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Comment notification sent:', result.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending comment notification:', error.message);
    return false;
  }
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–ø–æ—Å—Ç–µ
const sendRepostNotification = async (reposter, originalAuthor, post) => {
  try {
    const transporter = createTransporter();
    
    const avatarUrl = reposter.avatar || 'https://via.placeholder.com/60x60/667eea/ffffff?text=' + reposter.username.charAt(0).toUpperCase();
    
    const content = `
      <h2 style="color: #333; margin-bottom: 20px;">–í–∞—à –ø–æ—Å—Ç —Ä–µ–ø–æ—Å—Ç–Ω—É–ª–∏!</h2>
      <div style="display: flex; align-items: center; margin-bottom: 20px;">
        <img src="${avatarUrl}" alt="${reposter.username}" style="width: 60px; height: 60px; border-radius: 50%; margin-right: 15px; border: 3px solid #667eea;">
        <div>
          <p style="color: #666; line-height: 1.6; margin: 0;">
            <strong style="color: #333;">${reposter.username}</strong> —Ä–µ–ø–æ—Å—Ç–Ω—É–ª –≤–∞—à –ø–æ—Å—Ç.
          </p>
        </div>
      </div>
      <div style="background: white; border-radius: 8px; padding: 15px; margin: 20px 0;">
        <p style="margin: 0; color: #333;">
          <strong>–ü–æ—Å—Ç:</strong> ${post.content.substring(0, 100)}${post.content.length > 100 ? '...' : ''}<br>
          <strong>–†–µ–ø–æ—Å—Ç–Ω—É–ª:</strong> ${reposter.username}<br>
          <strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}
        </p>
      </div>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: originalAuthor.email,
      subject: `${reposter.username} —Ä–µ–ø–æ—Å—Ç–Ω—É–ª –≤–∞—à –ø–æ—Å—Ç - SocialSpace`,
      text: `${reposter.username} —Ä–µ–ø–æ—Å—Ç–Ω—É–ª –≤–∞—à –ø–æ—Å—Ç`,
      html: createEmailTemplate('–†–µ–ø–æ—Å—Ç', content, '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–ø–æ—Å—Ç', '#')
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Repost notification sent:', result.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending repost notification:', error.message);
    return false;
  }
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
const sendMessageNotification = async (sender, recipient, message) => {
  try {
    const transporter = createTransporter();
    
    const avatarUrl = sender.avatar || 'https://via.placeholder.com/60x60/667eea/ffffff?text=' + sender.username.charAt(0).toUpperCase();
    
    const content = `
      <h2 style="color: #333; margin-bottom: 20px;">–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!</h2>
      <div style="display: flex; align-items: center; margin-bottom: 20px;">
        <img src="${avatarUrl}" alt="${sender.username}" style="width: 60px; height: 60px; border-radius: 50%; margin-right: 15px; border: 3px solid #667eea;">
        <div>
          <p style="color: #666; line-height: 1.6; margin: 0;">
            <strong style="color: #333;">${sender.username}</strong> –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
          </p>
        </div>
      </div>
      <div style="background: white; border-radius: 8px; padding: 15px; margin: 20px 0;">
        <p style="margin: 0; color: #333;">
          <strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> ${message.content.substring(0, 150)}${message.content.length > 150 ? '...' : ''}<br>
          <strong>–û—Ç:</strong> ${sender.username}<br>
          <strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}
        </p>
      </div>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: recipient.email,
      subject: `–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${sender.username} - SocialSpace`,
      text: `${sender.username} –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ`,
      html: createEmailTemplate('–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', content, '–û—Ç–≤–µ—Ç–∏—Ç—å', '#')
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Message notification sent:', result.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending message notification:', error.message);
    return false;
  }
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—Ö–æ–¥—è—â–µ–º –∑–≤–æ–Ω–∫–µ (–µ—Å–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω)
const sendMissedCallNotification = async (caller, recipient) => {
  try {
    const transporter = createTransporter();
    
    const avatarUrl = caller.avatar || 'https://via.placeholder.com/60x60/667eea/ffffff?text=' + caller.username.charAt(0).toUpperCase();
    
    const content = `
      <h2 style="color: #333; margin-bottom: 20px;">–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π –∑–≤–æ–Ω–æ–∫!</h2>
      <div style="display: flex; align-items: center; margin-bottom: 20px;">
        <img src="${avatarUrl}" alt="${caller.username}" style="width: 60px; height: 60px; border-radius: 50%; margin-right: 15px; border: 3px solid #667eea;">
        <div>
          <p style="color: #666; line-height: 1.6; margin: 0;">
            <strong style="color: #333;">${caller.username}</strong> –∑–≤–æ–Ω–∏–ª –≤–∞–º, –Ω–æ –≤—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏.
          </p>
        </div>
      </div>
      <div style="background: white; border-radius: 8px; padding: 15px; margin: 20px 0;">
        <p style="margin: 0; color: #333;">
          <strong>–ó–≤–æ–Ω–∏–ª:</strong> ${caller.username}<br>
          <strong>–í—Ä–µ–º—è:</strong> ${new Date().toLocaleString('ru-RU')}<br>
          <strong>–°—Ç–∞—Ç—É—Å:</strong> –ü—Ä–æ–ø—É—â–µ–Ω
        </p>
      </div>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: recipient.email,
      subject: `–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –æ—Ç ${caller.username} - SocialSpace`,
      text: `${caller.username} –∑–≤–æ–Ω–∏–ª –≤–∞–º`,
      html: createEmailTemplate('–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π –∑–≤–æ–Ω–æ–∫', content, '–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å', '#')
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Missed call notification sent:', result.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending missed call notification:', error.message);
    return false;
  }
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
const sendRankingNotification = async (user, newRank, oldRank) => {
  try {
    const transporter = createTransporter();
    
    const content = `
      <h2 style="color: #333; margin-bottom: 20px;">–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ!</h2>
      <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
        –í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å.
      </p>
      <div style="background: white; border-radius: 8px; padding: 15px; margin: 20px 0;">
        <p style="margin: 0; color: #333;">
          <strong>–ù–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è:</strong> ${newRank}<br>
          <strong>–ü—Ä–µ–¥—ã–¥—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è:</strong> ${oldRank}<br>
          <strong>–ò–∑–º–µ–Ω–µ–Ω–∏–µ:</strong> ${oldRank > newRank ? '–£–ª—É—á—à–µ–Ω–∏–µ' : '–£—Ö—É–¥—à–µ–Ω–∏–µ'}<br>
          <strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}
        </p>
      </div>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: user.email,
      subject: `–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ - SocialSpace`,
      text: `–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Å ${oldRank} –Ω–∞ ${newRank}`,
      html: createEmailTemplate('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ', content, '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–π—Ç–∏–Ω–≥', '#')
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Ranking notification sent:', result.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending ranking notification:', error.message);
    return false;
  }
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤
const sendTransferNotification = async (sender, recipient, amount, description) => {
  try {
    const transporter = createTransporter();
    
    const avatarUrl = sender.avatar || 'https://via.placeholder.com/60x60/667eea/ffffff?text=' + sender.username.charAt(0).toUpperCase();
    
    const content = `
      <h2 style="color: #333; margin-bottom: 20px;">–ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤!</h2>
      <div style="display: flex; align-items: center; margin-bottom: 20px;">
        <img src="${avatarUrl}" alt="${sender.username}" style="width: 60px; height: 60px; border-radius: 50%; margin-right: 15px; border: 3px solid #667eea;">
        <div>
          <p style="color: #666; line-height: 1.6; margin: 0;">
            <strong style="color: #333;">${sender.username}</strong> –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º —Å—Ä–µ–¥—Å—Ç–≤–∞.
          </p>
        </div>
      </div>
      <div style="background: white; border-radius: 8px; padding: 15px; margin: 20px 0;">
        <p style="margin: 0; color: #333;">
          <strong>–°—É–º–º–∞:</strong> ${amount} –º–æ–Ω–µ—Ç<br>
          <strong>–û—Ç:</strong> ${sender.username}<br>
          <strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}<br>
          <strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}
        </p>
      </div>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: recipient.email,
      subject: `–ü–µ—Ä–µ–≤–æ–¥ –æ—Ç ${sender.username} - SocialSpace`,
      text: `${sender.username} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${amount} –º–æ–Ω–µ—Ç`,
      html: createEmailTemplate('–ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤', content, '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—à–µ–ª–µ–∫', '#')
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Transfer notification sent:', result.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending transfer notification:', error.message);
    return false;
  }
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–∞—Ä–∫–µ –ø—Ä–µ–º–∏—É–º
const sendPremiumGiftNotification = async (sender, recipient) => {
  try {
    const transporter = createTransporter();
    
    const avatarUrl = sender.avatar || 'https://via.placeholder.com/60x60/667eea/ffffff?text=' + sender.username.charAt(0).toUpperCase();
    
    const content = `
      <h2 style="color: #333; margin-bottom: 20px;">–ü–æ–¥–∞—Ä–æ–∫ –ø—Ä–µ–º–∏—É–º!</h2>
      <div style="display: flex; align-items: center; margin-bottom: 20px;">
        <img src="${avatarUrl}" alt="${sender.username}" style="width: 60px; height: 60px; border-radius: 50%; margin-right: 15px; border: 3px solid #667eea;">
        <div>
          <p style="color: #666; line-height: 1.6; margin: 0;">
            <strong style="color: #333;">${sender.username}</strong> –ø–æ–¥–∞—Ä–∏–ª –≤–∞–º –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å!
          </p>
        </div>
      </div>
      <div style="background: white; border-radius: 8px; padding: 15px; margin: 20px 0;">
        <p style="margin: 0; color: #333;">
          <strong>–ü–æ–¥–∞—Ä–æ–∫:</strong> –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å<br>
          <strong>–û—Ç:</strong> ${sender.username}<br>
          <strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}
        </p>
      </div>
      <p style="color: #666; font-size: 14px; margin-top: 20px;">
        –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏—è–º!
      </p>
    `;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: recipient.email,
      subject: `–ü–æ–¥–∞—Ä–æ–∫ –ø—Ä–µ–º–∏—É–º –æ—Ç ${sender.username} - SocialSpace`,
      text: `${sender.username} –ø–æ–¥–∞—Ä–∏–ª –≤–∞–º –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å`,
      html: createEmailTemplate('–ü–æ–¥–∞—Ä–æ–∫ –ø—Ä–µ–º–∏—É–º', content, '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å', '#')
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Premium gift notification sent:', result.messageId);
    return true;
  } catch (error) {
    console.error('‚ùå Error sending premium gift notification:', error.message);
    return false;
  }
};

module.exports = {
  sendFollowNotification,
  sendLikeNotification,
  sendCommentNotification,
  sendRepostNotification,
  sendMessageNotification,
  sendMissedCallNotification,
  sendRankingNotification,
  sendTransferNotification,
  sendPremiumGiftNotification
};
