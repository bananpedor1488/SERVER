// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è emailUtils —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –∏–º–ø–æ—Ä—Ç–æ–º
console.log('üîß Loading emailUtils.js...');

// –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏–º–ø–æ—Ä—Ç–∞ nodemailer
let nodemailer;

try {
  // –°–ø–æ—Å–æ–± 1: –û–±—ã—á–Ω—ã–π –∏–º–ø–æ—Ä—Ç
  nodemailer = require('nodemailer');
  console.log('‚úÖ Nodemailer imported normally');
} catch (error) {
  console.log('‚ùå Normal import failed:', error.message);
  
  try {
    // –°–ø–æ—Å–æ–± 2: –ò–º–ø–æ—Ä—Ç —Å .default
    nodemailer = require('nodemailer').default;
    console.log('‚úÖ Nodemailer imported with .default');
  } catch (error2) {
    console.log('‚ùå .default import failed:', error2.message);
    
    try {
      // –°–ø–æ—Å–æ–± 3: –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç
      const nodemailerModule = require('nodemailer');
      nodemailer = nodemailerModule.default || nodemailerModule;
      console.log('‚úÖ Nodemailer imported dynamically');
    } catch (error3) {
      console.log('‚ùå Dynamic import failed:', error3.message);
      throw new Error('Failed to import nodemailer. Please install it: npm install nodemailer@6.9.7');
    }
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ nodemailer —Ä–∞–±–æ—Ç–∞–µ—Ç
if (!nodemailer || typeof nodemailer.createTransporter !== 'function') {
  console.error('‚ùå Nodemailer is not working properly:', {
    nodemailer: typeof nodemailer,
    createTransporter: typeof nodemailer?.createTransporter,
    availableMethods: nodemailer ? Object.keys(nodemailer) : 'nodemailer is null'
  });
  
  // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä –Ω–∞–ø—Ä—è–º—É—é
  try {
    const testTransporter = nodemailer.createTransporter({
      service: 'gmail',
      auth: {
        user: 'test@test.com',
        pass: 'test'
      }
    });
    console.log('‚úÖ Test transporter created successfully');
  } catch (testError) {
    console.error('‚ùå Test transporter failed:', testError.message);
    throw new Error('Nodemailer is not properly configured. Please check installation.');
  }
}

console.log('üì¶ Nodemailer loaded successfully:', {
  type: typeof nodemailer,
  hasCreateTransporter: typeof nodemailer.createTransporter === 'function',
  version: nodemailer.version || 'unknown'
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
const generateVerificationCode = () => {
  return Math.floor(100000 + Math.random() * 900000).toString();
};

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
const createTransporter = () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASSWORD) {
    console.error('‚ùå Email configuration missing:');
    console.error('   EMAIL_USER:', process.env.EMAIL_USER ? '‚úÖ Set' : '‚ùå Missing');
    console.error('   EMAIL_PASSWORD:', process.env.EMAIL_PASSWORD ? '‚úÖ Set' : '‚ùå Missing');
    throw new Error('Email configuration is missing. Please check your .env file.');
  }

  console.log('üìß Creating email transporter...');

  try {
    const transporter = nodemailer.createTransporter({
      service: 'gmail',
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASSWORD
      }
    });
    
    console.log('‚úÖ Email transporter created successfully');
    return transporter;
  } catch (error) {
    console.error('‚ùå Error creating email transporter:', error);
    throw error;
  }
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ email
const sendVerificationEmail = async (email, code) => {
  try {
    console.log(`üìß Sending verification email to: ${email}`);
    console.log(`üî¢ Verification code: ${code}`);
    
    const transporter = createTransporter();
    
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: email,
      subject: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - SocialSpace',
      text: `–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${code}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h1>SocialSpace</h1>
          <h2>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</h2>
          <p>–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: <strong>${code}</strong></p>
        </div>
      `
    };
    
    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Verification email sent successfully');
    return true;
  } catch (error) {
    console.error('‚ùå Error sending verification email:', error.message);
    return false;
  }
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ
const resendVerificationEmail = async (email, code) => {
  return sendVerificationEmail(email, code);
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ email —Å–µ—Ä–≤–∏—Å—É
const testEmailConnection = async () => {
  try {
    const transporter = createTransporter();
    await transporter.verify();
    console.log('‚úÖ Email connection verified successfully');
    return true;
  } catch (error) {
    console.error('‚ùå Email connection failed:', error.message);
    return false;
  }
};

module.exports = {
  generateVerificationCode,
  sendVerificationEmail,
  resendVerificationEmail,
  testEmailConnection
};
