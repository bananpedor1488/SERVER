const mongoose = require('mongoose');
const bcrypt = require('bcrypt');
const User = require('../models/User');
require('dotenv').config();

const createAdmin = async () => {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb+srv://biznestim777:FLAmF8jA8YdPuihY@cluster0.wtsrzsf.mongodb.net/');
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');

    // –ò—â–µ–º —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –ø–æ username –∏–ª–∏ email
    const yourUsername = 'admin'; // ‚Üê –¢–≤–æ–π username
    const yourEmail = 'biznestim777@gmail.com'; // ‚Üê –¢–≤–æ—è –ø–æ—á—Ç–∞
    
    console.log(`üîç –ò—â–µ–º –∞–∫–∫–∞—É–Ω—Ç: @${yourUsername} –∏–ª–∏ ${yourEmail}...`);
    
    const yourAccount = await User.findOne({
      $or: [
        { username: yourUsername },
        { email: yourEmail }
      ]
    });
    
    if (!yourAccount) {
      console.log('‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      console.log('üí° –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å username/email –≤ —Å–∫—Ä–∏–ø—Ç–µ');
      console.log('üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
      
      const allUsers = await User.find({}, 'username email displayName').limit(10);
      allUsers.forEach(user => {
        console.log(`   - @${user.username} (${user.email}) - ${user.displayName || '–ë–µ–∑ –∏–º–µ–Ω–∏'}`);
      });
      
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –∞–∫–∫–∞—É–Ω—Ç: @${yourAccount.username}`);
    console.log(`üìß Email: ${yourAccount.email}`);
    console.log(`üë§ –ò–º—è: ${yourAccount.displayName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
    console.log(`üé≠ –¢–µ–∫—É—â–∞—è —Ä–æ–ª—å: ${yourAccount.role || 'user'}`);
    
    // –î–µ–ª–∞–µ–º –∞–¥–º–∏–Ω–æ–º
    yourAccount.role = 'admin';
    yourAccount.premium = true;
    yourAccount.points = Math.max(yourAccount.points || 0, 10000);
    
    await yourAccount.save();
    
    console.log('\nüéâ –£–°–ü–ï–•! –¢–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω!');
    console.log('üéØ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
    console.log(`   Username: @${yourAccount.username}`);
    console.log(`   Email: ${yourAccount.email}`);
    console.log(`   Role: ${yourAccount.role}`);
    console.log(`   Premium: ${yourAccount.premium}`);
    console.log(`   Points: ${yourAccount.points}`);
    console.log(`   ID: ${yourAccount._id}`);

    console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å:');
    console.log('   1. –í–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
    console.log('   2. –£–≤–∏–¥–µ—Ç—å –∫–Ω–æ–ø–∫—É "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å" –≤ —Å–∞–π–¥–±–∞—Ä–µ');
    console.log('   3. –£–≤–∏–¥–µ—Ç—å –∫—Ä–∞—Å–Ω—ã–π –∑–Ω–∞—á–æ–∫ ADMIN –≤ –ø—Ä–æ—Ñ–∏–ª–µ');
    console.log('   4. –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –ø–æ—Å—Ç–∞–º–∏');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    await mongoose.connection.close();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
    process.exit(0);
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
createAdmin();
