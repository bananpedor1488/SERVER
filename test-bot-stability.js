const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();

// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ Telegram –±–æ—Ç–∞
async function testBotStability() {
  const token = process.env.TELEGRAM_BOT_TOKEN || '8481849743:AAHOM7yAhs3evhou_rHxR5ktJwVsWxZfwrc';
  
  if (!token) {
    console.error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    return;
  }
  
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ Telegram –±–æ—Ç–∞...');
  console.log('Token:', token ? `${token.substring(0, 10)}...` : 'NOT SET');
  
  const bot = new TelegramBot(token, { polling: false }); // –°–æ–∑–¥–∞–µ–º –±–µ–∑ polling –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
    console.log('\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞...');
    if (bot && typeof bot.getMe === 'function') {
      console.log('‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞');
      return;
    }
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...');
    
    if (typeof bot.stopPolling === 'function') {
      console.log('‚úÖ bot.stopPolling() –¥–æ—Å—Ç—É–ø–µ–Ω');
    } else {
      console.log('‚ùå bot.stopPolling() –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
    
    if (typeof bot.stopWebhook === 'function') {
      console.log('‚úÖ bot.stopWebhook() –¥–æ—Å—Ç—É–ø–µ–Ω');
    } else {
      console.log('‚ùå bot.stopWebhook() –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
    
    if (typeof bot.close === 'function') {
      console.log('‚úÖ bot.close() –¥–æ—Å—Ç—É–ø–µ–Ω');
    } else {
      console.log('‚ùå bot.close() –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
    console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API...');
    
    try {
      console.log('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API...');
      const me = await bot.getMe();
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API —É—Å–ø–µ—à–Ω–æ');
      console.log(`ü§ñ Bot info: @${me.username} (${me.first_name})`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ API:', error.message);
    }
    
         // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ polling
     console.log('\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ polling...');
     
     try {
       console.log('üöÄ –ó–∞–ø—É—Å–∫ polling...');
       bot.startPolling();
       console.log('‚úÖ Polling –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ');
       
       // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
       await new Promise(resolve => setTimeout(resolve, 3000));
       
       console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ polling...');
       try {
         bot.stopPolling();
         console.log('‚úÖ Polling –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
       } catch (stopError) {
         console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ polling (–º–æ–∂–µ—Ç –±—ã—Ç—å —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω):', stopError.message);
       }
       
     } catch (error) {
       console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ/–æ—Å—Ç–∞–Ω–æ–≤–∫–µ polling:', error.message);
     }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
     } finally {
     // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
     if (bot && typeof bot.close === 'function') {
       try {
         bot.close();
         console.log('‚úÖ Bot connection closed in test');
       } catch (closeError) {
         console.log('‚ö†Ô∏è Error closing bot connection in test:', closeError.message);
       }
     }
   }
}

testBotStability();
