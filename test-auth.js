const axios = require('axios');

// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
async function testAuth() {
  const baseURL = 'https://server-pqqy.onrender.com';
  
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    console.log('\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health endpoint...');
    const healthResponse = await axios.get(`${baseURL}/api/health`);
    console.log('‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç:', healthResponse.data.status);
    
    // –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É endpoint –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞...');
    try {
      await axios.get(`${baseURL}/api/phone-verification/status`);
      console.log('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
    } catch (error) {
      if (error.response && error.response.status === 401) {
        console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –¥–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –±–µ–∑ —Ç–æ–∫–µ–Ω–∞');
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.response.data.message);
      } else {
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message);
      }
    }
    
    // –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
    console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º...');
    try {
      await axios.get(`${baseURL}/api/phone-verification/status`, {
        headers: {
          'Authorization': 'Bearer invalid-token'
        }
      });
      console.log('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º');
    } catch (error) {
      if (error.response && error.response.status === 403) {
        console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –¥–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º');
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.response.data.message);
      } else {
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error.message);
      }
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

testAuth();
